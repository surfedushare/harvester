services:

  harvester:
    build:
      dockerfile: "harvester/Dockerfile"
      context: .
      args:  # notice that localhost builds end up in production, but production ignores special UID/GID values
        - UID=${HOST_UID}
        - GID=${HOST_GID}
    command: uwsgi --ini uwsgi/emperor.ini --vassals-include=uwsgi/development.ini
    stdin_open: true
    tty: true
    environment:
      - PYTHONIOENCODING=UTF-8
      - COLUMNS=80
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=harvester.settings
      - APPLICATION_MODE=${APPLICATION_MODE}
      - APPLICATION_PROJECT=${APPLICATION_PROJECT}
      - DET_DJANGO_DEBUG=${DET_DJANGO_DEBUG}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_PROFILE=${AWS_PROFILE}
    ports:
      - "127.0.0.1:8888:8888"
      - "127.0.0.1:8889:8889"
      - "127.0.0.1:8890:8890"
    volumes:
      - ${HOME}/.aws:/home/app/.aws
      - ./harvester:/usr/src/app
      - ./media:/usr/src/media
      - ./environments/localhost/invoke.yml:/usr/src/environments/localhost/invoke.yml
      - ../search-client:/usr/src/search_client
    depends_on:
      - postgres

  celery_worker:
    build:
      dockerfile: "harvester/Dockerfile"
      context: .
      args: # notice that localhost builds end up in production, but production ignores special UID/GID values
        - UID=${HOST_UID}
        - GID=${HOST_GID}
    stdin_open: true
    tty: true
    environment:
      - PYTHONIOENCODING=UTF-8
      - COLUMNS=80
      - PYTHONUNBUFFERED=1
      - APPLICATION_MODE=${APPLICATION_MODE}
      - DET_DJANGO_DEBUG=${DET_DJANGO_DEBUG}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_PROFILE=${AWS_PROFILE}
    volumes:
      - ${HOME}/.aws:/home/app/.aws
      - ./harvester:/usr/src/app
      - ./media:/usr/src/media
      - ./environments/localhost/invoke.yml:/usr/src/environments/localhost/invoke.yml
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A harvester worker --loglevel=INFO
    healthcheck:
      test: celery -A harvester inspect ping
    links:
      - redis:redis
    depends_on:
      - redis
      - postgres

  flower:
    build:
      dockerfile: "harvester/Dockerfile"
      context: .
      args: # notice that localhost builds end up in production, but production ignores special UID/GID values
        - UID=${HOST_UID}
        - GID=${HOST_GID}
    stdin_open: true
    tty: true
    environment:
      - PYTHONIOENCODING=UTF-8
      - PYTHONUNBUFFERED=1
      - APPLICATION_MODE=${APPLICATION_MODE}
      - DET_DJANGO_DEBUG=${DET_DJANGO_DEBUG}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_PROFILE=${AWS_PROFILE}
    volumes:
      - ${HOME}/.aws:/home/app/.aws
      - ./harvester:/usr/src/app
      - ./media:/usr/src/media
      - ./environments/localhost/invoke.yml:/usr/src/environments/localhost/invoke.yml
    command: celery -A harvester flower --url_prefix=flower
    ports:
      - "127.0.0.1:5555:5555"
    depends_on:
      - redis

  nginx:
    image: nginx
    volumes:
      - ./nginx/ip-whitelist.conf:/etc/nginx/ip-whitelist.conf
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    network_mode: "host"
    depends_on:
      - harvester
      - flower

  tika:
    build:
      dockerfile: "tika/Dockerfile-tika"
      context: .
    volumes:
      - ./tika/tika-config.xml:/config/tika-config.xml
      - ./tika/tika-extras:/tika-extras
    ports:
      - "127.0.0.1:9998:9998"
