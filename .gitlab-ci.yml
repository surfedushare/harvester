variables:
  FF_NETWORK_PER_BUILD: 1
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: qwerty
  POSTGRES_HOST_AUTH_METHOD: trust
  POSTGRES_VERSION: "12.2"
  ELASTIC_SEARCH_VERSION: "7.9.3"
  APPLICATION_CONTEXT: host
  APPLICATION_MODE: localhost
  POL_POSTGRES_USER: $POSTGRES_USER
  POL_SECRETS_POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  DOCKER_AUTH_CONFIG: "{\"credHelpers\": {\"017973353230.dkr.ecr.eu-central-1.amazonaws.com\": \"ecr-login\"}}"
  AWS_CONTAINER_REGISTRY: 017973353230.dkr.ecr.eu-central-1.amazonaws.com

image: $AWS_CONTAINER_REGISTRY/gitlab-runner:latest

stages:
  - lint-and-test
  - build
  - integration-test
  - promote

.setup-repository:
  before_script:
    - invoke aws.sync-repository-state --no-profile
    - invoke prepare-builds --commit $CI_COMMIT_SHA

lint-job:
  stage: lint-and-test
  script:
    - flake8 .
    - cd portal
    - npm run lint

service-test-job:
  stage: lint-and-test
  services:
    - name: postgres:$POSTGRES_VERSION-alpine
    - name: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_SEARCH_VERSION
      alias: elasticsearch
      command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
  script:
    - APPLICATION_PROJECT=edusources invoke test.service
    - APPLICATION_PROJECT=nppo invoke test.service

harvester-test-job:
  stage: lint-and-test
  extends: .setup-repository
  services:
    - name: postgres:$POSTGRES_VERSION-alpine
  script:
    - APPLICATION_PROJECT=edusources invoke test.harvester
    - APPLICATION_PROJECT=nppo invoke test.harvester

build-job:
  stage: build
  extends: .setup-repository
  services:
    - name: docker:dind
  script:
    - invoke aws.build harvester --commit $CI_COMMIT_SHA --docker-login
    - invoke aws.build service --commit $CI_COMMIT_SHA
    - invoke aws.push harvester --commit $CI_COMMIT_SHA --push-latest
    - invoke aws.push service --commit $CI_COMMIT_SHA --push-latest

integration-test-job:
  stage: integration-test
  services:
    - name: $AWS_CONTAINER_REGISTRY/harvester:$CI_COMMIT_SHA
      alias: harvester
    - name: $AWS_CONTAINER_REGISTRY/search-portal:$CI_COMMIT_SHA
      alias: service
    - name: postgres:$POSTGRES_VERSION-alpine
    - name: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_SEARCH_VERSION
      alias: elasticsearch
      command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
  variables:
    POL_ELASTIC_SEARCH_ENABLE_DECOMPOUND_ANALYZERS: 0
  script:
    - invoke srv.setup-postgres --host postgres
    - invoke hrv.setup-postgres --host postgres
    - invoke hrv.index-dataset-version localhost -d test
    - APPLICATION_PROJECT=edusources invoke test.e2e
  artifacts:
    when: always
    paths:
      - portal/tests/e2e/videos/**/*.mp4
      - portal/tests/e2e/screenshots/**/*.png
    expire_in: 1 day

promote:
  stage: promote
  when: manual
  services:
    - name: docker:dind
  script:
    - invoke aws.promote harvester --commit $CI_COMMIT_SHA
    - invoke aws.promote service --commit $CI_COMMIT_SHA
