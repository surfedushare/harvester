# Generated by Django 3.2.20 on 2023-08-24 11:58

from django.db import migrations, models
import django.db.models.deletion
import sources.models.harvest


class Migration(migrations.Migration):

    dependencies = [
        ('sources', '0010_saxionoaipmhresource'),
    ]

    operations = [
        migrations.CreateModel(
            name='HarvestSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Human readable name', max_length=50)),
                ('module', models.CharField(help_text='Name of Python modules related to this source', max_length=50)),
                ('is_repository', models.BooleanField(default=False, help_text='Enable when source is a repository for multiple providers')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HarvestEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('products', 'Product'), ('files', 'File'), ('testing', 'Test')], max_length=50)),
                ('is_available', models.BooleanField(default=False)),
                ('is_manual', models.BooleanField(default=False)),
                ('allows_update', models.BooleanField(default=False)),
                ('set_specification', models.CharField(help_text="The slug for the 'set' you want to harvest", max_length=255)),
                ('delete_policy', models.CharField(choices=[('no', 'No'), ('persistent', 'Persistent'), ('transient', 'Transient')], default='transient', max_length=50)),
                ('purge_interval', models.JSONField(default=sources.models.harvest.thirty_days_default)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sources.harvestsource')),
            ],
            options={
                'verbose_name_plural': 'harvest entities',
                'unique_together': {('source', 'type')},
            },
        ),
    ]
